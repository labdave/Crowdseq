from django import forms
from django.db import models


class Genes(models.Model):
    hgnc_gene_id = models.IntegerField(unique=True)
    accession_numbers = models.TextField(blank=True, null=True)
    alias_names = models.TextField(blank=True, null=True)
    alias_symbols = models.TextField(blank=True, null=True)
    approved_name = models.TextField(blank=True, null=True)
    approved_symbol = models.TextField(blank=True, null=True)
    ccds_ids = models.TextField(blank=True, null=True)
    chromosome = models.TextField()
    gene_group_name = models.TextField(blank=True, null=True)
    gene_group_id = models.TextField(blank=True, null=True)
    date_approved = models.DateField(blank=True, null=True)
    enzyme_ids = models.TextField(blank=True, null=True)
    locus_group = models.TextField()
    locus_type = models.TextField()
    ensembl_gene_id = models.TextField(blank=True, null=True)
    locus_specific_gene_id = models.TextField(blank=True, null=True)
    ncbi_gene_id = models.IntegerField(blank=True, null=True)
    previous_name = models.TextField(blank=True, null=True)
    previous_symbols = models.TextField(blank=True, null=True)
    pubmed_ids = models.TextField(blank=True, null=True)
    refseq_ids = models.TextField(blank=True, null=True)
    status = models.TextField()
    uniprot_id = models.TextField(blank=True, null=True)
    vega_ids = models.TextField(blank=True, null=True)
    omim_id = models.TextField(blank=True, null=True)
    ucsc_id = models.TextField(blank=True, null=True)


class Transcripts(models.Model):
    md5sum = models.TextField(unique=True)
    aa_change_name = models.TextField(blank=True, null=True)
    ensembl_transcript_id = models.TextField(blank=True, null=True)
    ensembl_hgvsc_id = models.TextField(blank=True, null=True)
    ensembl_hgvsp_id = models.TextField(blank=True, null=True)
    ensembl_peptide_id = models.TextField(blank=True, null=True)
    refseq_stable_coding_hgvsc_id = models.TextField(blank=True, null=True)
    refseq_stable_coding_transcript_id = models.TextField(blank=True, null=True)
    refseq_stable_noncoding_hgvsc_id = models.TextField(blank=True, null=True)
    refseq_stable_noncoding_transcript_id = models.TextField(blank=True, null=True)
    refseq_stable_peptide_id = models.TextField(blank=True, null=True)
    lrg_transcript_id = models.TextField(blank=True, null=True)
    lrg_hgvsc_id = models.TextField(blank=True, null=True)
    lrg_hgvsp_id = models.TextField(blank=True, null=True)
    refseq_match_transcript_mane_select = models.TextField(blank=True, null=True)
    refseq_match_transcript_mane_plus_clinical = models.TextField(blank=True, null=True)
    ensembl_canonical = models.BooleanField(blank=True, null=True)
    transcript_support_level = models.TextField(blank=True, null=True)
    transcript_length = models.IntegerField(blank=True, null=True)


class Variants(models.Model):
    md5sum = models.TextField(unique=True)
    chrom_pos_ref_alt = models.TextField()
    chr = models.TextField()
    start_pos = models.IntegerField()
    end_pos = models.IntegerField()
    ref_allele = models.TextField()
    alt_allele = models.TextField()
    gene = models.ForeignKey(Genes, on_delete=models.CASCADE, related_name='variants', blank=True, null=True)
    hgvsg_id = models.TextField()
    alt_hgvsg_id = models.TextField()
    refseq_hgvsg_id = models.TextField()
    lrg_hgvsg_id = models.TextField(blank=True, null=True)
    alt_chr = models.TextField()
    alt_chrom_pos_ref_alt = models.TextField()
    transcripts = models.ManyToManyField(Transcripts, related_name='variants')
